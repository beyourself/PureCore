***************
*** 7823,7828 ****
      if (only_level_scale && !ssv)
          return;
  
      for (uint8 i = 0; i < MAX_ITEM_PROTO_STATS; ++i)
      {
          uint32 statType = 0;
--- 7823,7842 ----
      if (only_level_scale && !ssv)
          return;
  
+     uint32 statcount = proto->StatsCount;
+     ReforgeData* reforgeData = NULL;
+     bool decreased = false;
+     if (statcount < MAX_ITEM_PROTO_STATS)
+     {
+         if (Item* invItem = GetItemByPos(INVENTORY_SLOT_BAG_0, slot))
+         {
+             if (reforgeMap.find(invItem->GetGUIDLow()) != reforgeMap.end())
+             {
+                 reforgeData = &reforgeMap[invItem->GetGUIDLow()];
+                 ++statcount;
+             }
+         }
+     }
      for (uint8 i = 0; i < MAX_ITEM_PROTO_STATS; ++i)
      {
          uint32 statType = 0;
***************
*** 7837,7846 ****
          }
          else
          {
-             if (i >= proto->StatsCount)
                  continue;
              statType = proto->ItemStat[i].ItemStatType;
              val = proto->ItemStat[i].ItemStatValue;
          }
  
          if (val == 0)
--- 7851,7874 ----
          }
          else
          {
+             if (i >= statcount)
                  continue;
              statType = proto->ItemStat[i].ItemStatType;
              val = proto->ItemStat[i].ItemStatValue;
+ 
+             if (reforgeData)
+             {
+                 if(i == statcount-1)
+                 {
+                     statType = reforgeData->increase;
+                     val = reforgeData->stat_value;
+                 }
+                 else if (!decreased && reforgeData->decrease == statType)
+                 {
+                     val -= reforgeData->stat_value;
+                     decreased = true;
+                 }
+             }
          }
  
          if (val == 0)
***************
*** 12631,12641 ****
      }
  }
  
  // Common operation need to remove item from inventory without delete in trade, auction, guild bank, mail....
  void Player::MoveItemFromInventory(uint8 bag, uint8 slot, bool update)
  {
      if (Item* it = GetItemByPos(bag, slot))
      {
          ItemRemovedQuestCheck(it->GetEntry(), it->GetCount());
          RemoveItem(bag, slot, update);
          it->SetNotRefundable(this, false);
--- 12659,12671 ----
      }
  }
  
+ extern void RemoveReforge(Player* player, uint32 itemguid, bool update);
  // Common operation need to remove item from inventory without delete in trade, auction, guild bank, mail....
  void Player::MoveItemFromInventory(uint8 bag, uint8 slot, bool update)
  {
      if (Item* it = GetItemByPos(bag, slot))
      {
+         RemoveReforge(this, it->GetGUIDLow(), true);
          ItemRemovedQuestCheck(it->GetEntry(), it->GetCount());
          RemoveItem(bag, slot, update);
          it->SetNotRefundable(this, false);
